// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RDR2.Infrastructure;

#nullable disable

namespace RDR2.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250203204808_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RDR2.Domain.Entities.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("GangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GangId");

                    b.ToTable("Characters", (string)null);
                });

            modelBuilder.Entity("RDR2.Domain.Entities.CharacterGun", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GunId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CharacterId", "GunId");

                    b.HasIndex("GunId");

                    b.ToTable("CharacterGuns");
                });

            modelBuilder.Entity("RDR2.Domain.Entities.Gang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalMembers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("Gangs", (string)null);
                });

            modelBuilder.Entity("RDR2.Domain.Entities.Gun", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ammunition")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<float>("Damage")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Guns", (string)null);
                });

            modelBuilder.Entity("RDR2.Domain.Entities.Mission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Missions", (string)null);
                });

            modelBuilder.Entity("RDR2.Domain.Entities.Character", b =>
                {
                    b.HasOne("RDR2.Domain.Entities.Gang", "Gang")
                        .WithMany("Characters")
                        .HasForeignKey("GangId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Gang");
                });

            modelBuilder.Entity("RDR2.Domain.Entities.CharacterGun", b =>
                {
                    b.HasOne("RDR2.Domain.Entities.Character", "Character")
                        .WithMany("CharacterGuns")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RDR2.Domain.Entities.Gun", "Gun")
                        .WithMany("CharacterGuns")
                        .HasForeignKey("GunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Gun");
                });

            modelBuilder.Entity("RDR2.Domain.Entities.Gang", b =>
                {
                    b.HasOne("RDR2.Domain.Entities.Character", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("RDR2.Domain.Entities.Character", b =>
                {
                    b.Navigation("CharacterGuns");
                });

            modelBuilder.Entity("RDR2.Domain.Entities.Gang", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("RDR2.Domain.Entities.Gun", b =>
                {
                    b.Navigation("CharacterGuns");
                });
#pragma warning restore 612, 618
        }
    }
}
